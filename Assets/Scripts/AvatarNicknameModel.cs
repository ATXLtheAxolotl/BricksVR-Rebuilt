using UnityEngine;

public partial class AvatarNicknameModel : MonoBehaviour {
    public string nickname {
        get {
            return _nicknameProperty;
        }
        set {
            if (_nicknameProperty == value) return;
            _nicknameProperty = value;
            
            FireNicknameDidChange(value);
        }
    }
    
    public string shortId {
        get {
            return _shortIdProperty;
        }
        set {
            if (_shortIdProperty == value) return;
            _shortIdProperty = value;
            
            FireShortIdDidChange(value);
        }
    }
    
    public int primaryAvatarColor {
        get {
            return _primaryAvatarColorProperty;
        }
        set {
            if (_primaryAvatarColorProperty == value) return;
            _primaryAvatarColorProperty = value;
            
            FirePrimaryAvatarColorDidChange(value);
        }
    }
    
    public int secondaryAvatarColor {
        get {
            return _secondaryAvatarColorProperty;
        }
        set {
            if (_secondaryAvatarColorProperty == value) return;
            _secondaryAvatarColorProperty = value;
            
            FireSecondaryAvatarColorDidChange(value);
        }
    }
    
    public int avatarEyes {
        get {
            return _avatarEyesProperty;
        }
        set {
            if (_avatarEyesProperty == value) return;
            _avatarEyesProperty = value;
            
            FireAvatarEyesDidChange(value);
        }
    }
    
    public int avatarMouth {
        get {
            return _avatarMouthProperty;
        }
        set {
            if (_avatarMouthProperty == value) return;
            _avatarMouthProperty = value;
            
            FireAvatarMouthDidChange(value);
        }
    }
    
    public delegate void PropertyChangedHandler<in T>(AvatarNicknameModel model, T value);
    public event PropertyChangedHandler<string> nicknameDidChange;
    public event PropertyChangedHandler<string> shortIdDidChange;
    public event PropertyChangedHandler<int> primaryAvatarColorDidChange;
    public event PropertyChangedHandler<int> secondaryAvatarColorDidChange;
    public event PropertyChangedHandler<int> avatarEyesDidChange;
    public event PropertyChangedHandler<int> avatarMouthDidChange;
    
    public enum PropertyID : uint {
        Nickname = 1,
        ShortId = 2,
        PrimaryAvatarColor = 3,
        SecondaryAvatarColor = 4,
        AvatarEyes = 5,
        AvatarMouth = 6,
    }
    
    #region Properties
    
    private string _nicknameProperty;
    
    private string _shortIdProperty;
    
    private int _primaryAvatarColorProperty;
    
    private int _secondaryAvatarColorProperty;
    
    private int _avatarEyesProperty;
    
    private int _avatarMouthProperty;
    
    #endregion
    
    private void FireNicknameDidChange(string value) {
        try {
            nicknameDidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FireShortIdDidChange(string value) {
        try {
            shortIdDidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FirePrimaryAvatarColorDidChange(int value) {
        try {
            primaryAvatarColorDidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FireSecondaryAvatarColorDidChange(int value) {
        try {
            secondaryAvatarColorDidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FireAvatarEyesDidChange(int value) {
        try {
            avatarEyesDidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
    
    private void FireAvatarMouthDidChange(int value) {
        try {
            avatarMouthDidChange?.Invoke(this, value);
        } catch (System.Exception exception) {
            UnityEngine.Debug.LogException(exception);
        }
    }
}
/* ----- End Normal Autogenerated Code ----- */
